#$ -V
#$ -S /bin/bash
#$ -o $HOME/logs/structural_qa.$JOB_ID.stdout
#$ -e $HOME/logs/structural_qa.$JOB_ID.stderr
#$ -l s_rt=0:30:00

if [ x"$1" = x"--bogus" ]
then
    bogus_run=1
    shift
else
    bogus_run=
fi

clean_up()
{

    echo 'cleaning up'

    if [ -z $working_dir ] ; then return 0 ; fi

    if [ ! -d $working_dir ] ; then return 0 ; fi

    rm -r $working_dir

    return 0

} # end clean_up()

time_out()
{

    echo 'soft time limit reached; exiting'

    exit 3

} # end time_out()

trap clean_up EXIT
trap time_out USR1

set -e

file_name=$1

cat << EOF

starting structural_qa

`date`

file_name = $file_name

bogus_run = $bogus_run

instance ID = `GET http://169.254.169.254/latest/meta-data/instance-id`
instance type = `GET http://169.254.169.254/latest/meta-data/instance-type`

EOF

working_dir=`mktemp -d --tmpdir=/scratch/ubuntu`

cd $working_dir

if [ $bogus_run ]
then

    cp -rv /ndar/test_data/structural_qa/* .

    store_structural_qa --file-name bogus-$file_name .

else

    echo 'starting structural QA'
    /usr/bin/time -v run_structural_qa $file_name .

    store_structural_qa --file-name $file_name .

fi

cd

clean_up
trap '' EXIT

echo
echo done `date`
echo

exit 0

# eof
