#!/usr/bin/python

# See file COPYING distributed with ndar-backend for copyright and license.

import sys
import os
import argparse
import cx_Oracle

progname = os.path.basename(sys.argv[0])

description = 'Store time series QA results in an NDAR database.'
parser = argparse.ArgumentParser(description=description)

parser.add_argument('--file-name', 
                    required=True, 
                    help='original file name (from image03)')
parser.add_argument('--subjectkey', 
                    required=True)
parser.add_argument('--interview-age', 
                    required=True, 
                    type=int)
parser.add_argument('--image03-id', 
                    required=True, 
                    type=int)

args = parser.parse_args()

for var in ('DB_HOST', 'DB_SERVICE', 'DB_USER', 'DB_PASSWORD'):
    if var not in os.environ:
        sys.stderr.write('%s: %s not set\n' % (progname, var))
        sys.exit(1)

dsn = cx_Oracle.makedsn(os.environ['DB_HOST'], 1521, os.environ['DB_SERVICE'])
db = cx_Oracle.connect(os.environ['DB_USER'], os.environ['DB_PASSWORD'], dsn)

c = db.cursor()

query = """INSERT INTO time_series_qa00 (file_source, 
                                         image03_id, 
                                         subjectkey, 
                                         interview_age) 
           VALUES (:file_source, 
                   :image03_id, 
                   :subjectkey, 
                   :interview_age)"""

query_params = {'file_source': args.file_name, 
                'image03_id': args.image03_id, 
                'subjectkey': args.subjectkey, 
                'interview_age': args.interview_age}

c.execute(query, query_params)

c.close()

db.commit()

db.close()

print 'done'

# eof
